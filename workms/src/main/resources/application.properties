spring.application.name=WORK-SERVICE

#port - 8082
server.port=8082

#connect to h2 database
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.datasource.url=jdbc:h2:mem:workdb

#connect to postgres database
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.url=jdbc:postgresql://localhost:5432/workdb
spring.jpa.database = POSTGRESQL

#hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

#euraka client
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true


#config client
spring.cloud.config.uri=http://localhost:8888
spring.config.import=optional:configserver:

#zipkin
spring.sleuth.sampler.probability=0.7

# Actuator configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always


# Resilience4J
resilience4j.circuitbreaker.instances.workerbreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.workerbreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.workerbreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.workerbreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.workerbreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.workerbreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.workerbreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.workerbreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.workerbreaker.sliding-window-type=count_based

resilience4j.circuitbreaker.instances.workerbreaker.max-attempts=5
resilience4j.circuitbreaker.instances.workerbreaker.wait-duration=2

resilience4j.ratelimiter.instances.workerbreaker.timeout-duration=0
resilience4j.ratelimiter.instances.workerbreaker.limit-refresh-period=4
resilience4j.ratelimiter.instances.workerbreaker.limit-for-period=2



resilience4j.ratelimiter.instances.companyBreaker.timeout-duration=0
resilience4j.ratelimiter.instances.companyBreaker.limit-refresh-period=4
resilience4j.ratelimiter.instances.companyBreaker.limit-for-period=2